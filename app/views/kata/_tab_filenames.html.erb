
<div class="tab-filenames"></div>

<script type="text/javascript">
'use strict';
$(() => {

  cd.setupReplTab = (onOff) => {
    // By default the [repl] tab will be hidden.
    const inDev = true;
    if (onOff !== 'on' && !inDev) {
      $replTab().hide();
    }
  };

  const $tabs = $('.tab-filenames');
  const $selectedTab = () => $('.selected', $tabs);
  const currentFilename = () => $filenameTab().text();
  const alreadySelected = $tab => $tab.hasClass('selected');
  const select = $tab => {
    $('.tab-filename').removeClass('selected');
    $tab.addClass('selected');
  };

  cd.isOutputFile = filename => ['stdout','stderr','status',$replTab().text()].includes(filename);

  //- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  // Tabs hot-key navigation
  //- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  // See app/assets/javascripts/cyber-dojo_codemirror.js
  // See app/views/shared/_hotkeys.html.erb
  // Alt-O ==> toggleOutputFile()

  cd.toggleOutputFile = () => {
    switch ($selectedTab().text()) {
    default               : cd.loadFile('stdout'); break;
    case 'stdout'         : cd.loadFile('stderr'); break;
    case 'stderr'         : cd.loadFile('status'); break;
    case 'status'         : cd.loadFile(currentFilename()); break;
    case $replTab().text(): cd.loadFile(currentFilename()); break;
    }
  };

  cd.setFilenameTab = (filename) => {
    // filename = from filename-knave, stdout, stderr, status (never +REPL)
    if ($selectedTab().text() === $replTab().text()) {
      cd.kata.repl.close();
    }
    const id = cd.isOutputFile(filename) ? `radio_${filename}` : 'current_filename';
    const $tab = $(`#${id}`, $tabs);
    $tab.text(filename);
    select($tab);
  };

  //- - - - - - - - - - - - - - - - - - - - - - - - -
  // [current-filename]

  const $filenameTab = () => $('#current_filename', $tabs);

  const setupCurrentFilenameTab = (filename) => {
    const $tab = $('<div>', {
      class:'tab-filename',
         id:'current_filename',
       text:filename
    });
    $tabs.append($tab);
    setupFilenameTabClickHandler($tab);
  };

  //- - - - - - - - - - - - - - - - - - - - - - - - -
  // stdout, stderr

  const setupOutputTab = (text) => {
    const $tab = $('<div>', {
        class: 'tab-filename',
           id: `radio_${text}`,
         text: text
    });
    $tabs.append($tab);
    setupFilenameTabClickHandler($tab);
  };

  const setupFilenameTabClickHandler = ($tab) => {
    $tab.click(() => {
      if (alreadySelected($tab)) { return; }
      const filename = $tab.text();
      cd.loadFile(filename);
      select($tab);
    });
  };

  //- - - - - - - - - - - - - - - - - - - - - - - - -
  // repl

  const $replTab = () => $('#radio_repl', $tabs);

  const setupReplTab = (text) => {
    const $tab = $('<div>', {
        class: 'tab-filename',
           id: 'radio_repl',
         text: text
    });
    $tabs.append($tab);
    setupReplTabClickHandler($tab);
  };

  const setupReplTabClickHandler = ($tab) => {
    $tab.click(() => {
      if (alreadySelected($tab)) { return; }
      cd.unloadFile($selectedTab().text());
      cd.kata.repl.open();
      select($tab);
    });
  };

  //- - - - - - - - - - - - - - - - - - - - - - - - -

  setupReplTab('+REPL')
  setupCurrentFilenameTab('cyber-dojo.sh');
  setupOutputTab('status')
  setupOutputTab('stderr')
  setupOutputTab('stdout')

});
</script>
