
<script type="text/javascript">
'use strict';
$(() => {

  cd.predict = {
    reset:() => {
      const predict = cd.settings.predict();
      if (predict === 'on') {
        cd.updateTrafficLightsCount();
        cd.countPredictBox().show();
      }
      if (predict === 'off') {
        cd.countPredictBox().hide();
      }
    }
  };

  //- - - - - - - - - - - - - - - - - - - - - - - - -
  cd.predictTrafficLight = (input, handler) => {
    // Called from the test-button handler
    if (cd.settings.predict() === 'on') {
      openPredictionDialog(input, handler);
    } else {
      handler();
    }
  };

  //- - - - - - - - - - - - - - - - - - - - - - - - -
  const openPredictionDialog = (input, handler) => {
    let html = '';
    html += '<div>'
    html += '<table>';
    html += tr('red',     redBlurb());
    html += tr('amber', amberBlurb());
    html += tr('green', greenBlurb());
    html += '</table>';
    html += tcrInfo();
    html += '</div>';
    const node = $(html);
    if (cd.trafficLightsCount(['red','amber','green']) > 0) {
      $('.tcr', node).show();
    }
    setupRagClick(input, node, handler, 'red');
    setupRagClick(input, node, handler, 'amber');
    setupRagClick(input, node, handler, 'green');
    setupBlurbClick(input, node, handler, 'red');
    setupBlurbClick(input, node, handler, 'amber');
    setupBlurbClick(input, node, handler, 'green');
    setupTcrCheckBox(node, 'red');
    setupTcrCheckBox(node, 'amber');
    setupTcrCheckBox(node, 'green');
    const originator = cd.testButton;
    const xPos = originator.offset().left;
    const yPos = originator.offset().top + 37;
    node.dialog({
              width: 305,
           position: [xPos,yPos],
           autoOpen: true,
      closeOnEscape: true,
              modal: true,
              title: cd.dialogTitle('predict'),
        beforeClose: event => {
          if (event.keyCode === $.ui.keyCode.ESCAPE) {
            node.dialog('destroy');
            return true;
          }
        }
    });
  };

  //- - - - - - - - - - - - - - - - - - - - - - - - -
  const setupRagClick = (input, node, handler, colour) => {
    $(`div#predict-${colour}`, node).click(() => {
      input.val(colour);
      node.remove();
      handler();
    });
  };

  //- - - - - - - - - - - - - - - - - - - - - - - - -
  const setupBlurbClick = (input, node, handler, colour) => {
    $(`.predict-blurb.${colour}`, node).click(() => {
      input.val(colour);
      node.remove();
      handler();
    });
  };

  //- - - - - - - - - - - - - - - - - - - - - - - - -
  const setupTcrCheckBox = (node, rag) => {
    const $checkbox = $(`#${rag}-tcr-checkbox`, node);
    $checkbox.prop('checked', tcr[rag])
             .change(() => tcr[rag] = $checkbox.prop('checked'));
  };

  const tcr = {
    red:false,
    amber:false,
    green:false
  };

  //- - - - - - - - - - - - - - - - - - - - - - - - -
  const redBlurb   = () => blurb('red',   'some tests will fail');
  const amberBlurb = () => blurb('amber', 'the tests wont run yet');
  const greenBlurb = () => blurb('green', 'all the tests will pass');

  const blurb = (colour, text) => `<div class="predict-blurb ${colour}">${text}</div>`;

  //- - - - - - - - - - - - - - - - - - - - - - - - -
  const tr = (rag, blurb) =>
    '<tr>' +
      `<td>${lightImg(rag)}</td>` +
      `<td>${blurb}</td>` +
      `<td class="tcr">${tcrCheckbox(rag)}</td>` +
    '</tr>';

  //- - - - - - - - - - - - - - - - - - - - - - - - -
  // kata.scss provides background image with custom :hover
  const lightImg = (rag) => `<div class="predict" id="predict-${rag}"></div>`;

  //- - - - - - - - - - - - - - - - - - - - - - - - -
  const tcrCheckbox = (rag) => {
    return '' +
      `<input type="checkbox" class="regular-checkbox" id="${rag}-tcr-checkbox"/>` +
      `<label for="${rag}-tcr-checkbox"></label>`;
  };

  //- - - - - - - - - - - - - - - - - - - - - - - - -
  const tcrInfo = () => {
    return '' +
      '<div id="tcr" class="tcr info">' +
        'The checkboxes implement a form of ' +
        '<a href="https://medium.com/@kentbeck_7670/test-commit-revert-870bbd756864" target="_blank">' +
        'Test &amp;&amp; Commit || Revert</a>. ' +
        'When checked, an incorrect prediction will be reverted!' +
      '</div>';
  };


});
</script>
