
<div class="tab-filenames">
  <div class="tab filename">cyber-dojo.sh</div>
  <div class="tab REPL">+REPL</div>
  <%# These three float:right so are in reverse order of appearance %>
  <div class="tab status">status</div>
  <div class="tab stderr">stderr</div>
  <div class="tab stdout">stdout</div>
</div>

<script type="text/javascript">
'use strict';
$(() => {

  const tabs = cd.kata.tabs;

  tabs.setup = (options) => {
    const inDev = false;
    if (options.repl === 'on' && "<%= raw @image_name %>".includes('python')) {
      tabs.repl().show();
    } else if (inDev) {
      tabs.repl().show();
    }
  };

  const $tabs = $('.tab-filenames');
  const alreadySelected = $tab => $tab.hasClass('selected');
  const select = $tab => {
    $('.tab', $tabs).removeClass('selected');
    $tab.addClass('selected');
  };

  tabs.filename = () => $('.tab.filename', $tabs);
  tabs.stdout   = () => $('.tab.stdout'  , $tabs);
  tabs.stderr   = () => $('.tab.stderr'  , $tabs);
  tabs.status   = () => $('.tab.status'  , $tabs);
  tabs.repl     = () => $('.tab.REPL'    , $tabs);

  tabs.selected = () => $('.tab.selected', $tabs);

  tabs.reserves = filename => {
    const tabNames = [];
    tabNames.push(tabs.stdout().text());
    tabNames.push(tabs.stderr().text());
    tabNames.push(tabs.status().text());
    tabNames.push('status');
    tabNames.push(tabs.repl().text());
    return tabNames.includes(filename);
  };

  tabs.setFilename = (filename) => {
    // Called from filenames. Always a true filename.
    const $tab = $('.tab.filename', $tabs);
    if (filename === 'cyber-dojo.sh') {
      $tab.removeClass('vellipsis');
    } else {
      $tab.addClass('vellipsis');
    }
    $tab.removeClass('selected');
    $tab.text(filename).show().click();
  };

  tabs.toggle = () => {
    // Alt-O tabs hot-key navigation (skip [status] and [REPL])
    // See app/assets/javascripts/cyber-dojo_codemirror.js
    // See app/views/shared/_hotkeys.html.erb
    switch (tabs.selected().text()) {
    default                  : tabs.stdout().click(); break;
    case tabs.stdout().text(): tabs.stderr().click(); break;
    case tabs.stderr().text(): tabs.filename().click(); break;
    }
  };

  const setupFileTabClickHandler = ($tab) => {
    $tab.click(() => {
      const filename = $tab.text();
      cd.kata.editor.showFile(filename);
      cd.kata.repl.close();
      if ($tab.is('.selected.filename.vellipsis')) {
        cd.openRenameDeleteFileDialog($tab, filename);
      }
      select($tab);
    });
  };

  const setupReplTabClickHandler = ($tab) => {
    $tab.click(() => {
      if (alreadySelected($tab)) { return; }
      select($tab);
      tabs.repl().show();
      cd.kata.editor.hideCurrentFile();
      cd.kata.repl.open();
    });
  };

  setupFileTabClickHandler(tabs.filename());
  setupFileTabClickHandler(tabs.stdout());
  setupFileTabClickHandler(tabs.stderr());
  setupFileTabClickHandler(tabs.status());
  setupReplTabClickHandler(tabs.repl());

});
</script>
