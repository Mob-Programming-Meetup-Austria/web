
<div class="file-operations">
  <button type="button" class="new-file">new</button>
  <button type="button" class="rename-file">rename</button>
  <button type="button" class="delete-file">delete</button>
</div>

<script type="text/javascript">
'use strict';
$(() => {

  cd.newFileButton     = () => $('.new-file');
  cd.renameFileButton  = () => $('.rename-file');
  cd.deleteFileButton  = () => $('.delete-file');

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  cd.newFileButton().click(() => {
    const initialFilename = `filename${cd.extensionFilenames()[0]}`;
    const okInitiallyDisabled = !isValidFilename(initialFilename);
    const okClicked = filename => cd.fileCreate(filename, '');
    openDialog(cd.newFileButton(), initialFilename, okInitiallyDisabled, okClicked);
  });

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  cd.renameFileButton().click(() => {
    const initialFilename = cd.currentFilename();
    const okInitiallyDisabled = true;
    const okClicked = filename => cd.fileRename(initialFilename, filename);
    openDialog(cd.renameFileButton(), initialFilename, okInitiallyDisabled, okClicked);
  });

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  cd.deleteFileButton().click(() => {
    const initialFilename = cd.currentFilename();
    const okInitiallyDisabled = false;
    const okClicked = filename => cd.fileDelete(filename);
    openDialog(cd.deleteFileButton(), initialFilename, okInitiallyDisabled, okClicked);
  });

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  const openDialog = function(originator, initialFilename, okInitiallyDisabled, okClicked) {
    const name = originator.text();
    const title = name + '&nbsp;file';
    const input = makeInput(name, initialFilename);
    // dialog has an [ok] button
    const ok = {
      text: 'ok',
      id: 'file-ok',
      disabled: okInitiallyDisabled,
      click: function() {
        const newFilename = $.trim(input.val());
        okClicked(newFilename);
        $(this).remove();
      }
    };
    // dialog has a [close] button
    const cancel = {
      text: 'cancel',
      click: function() {
        $(this).remove();
        cd.editorRefocus();
      }
    };

    const div = $('<div>');
    div.append(input);
    const fileOperationDialog = div.dialog({
      closeOnEscape: true,
  	  title: cd.dialogTitle(title),
    	autoOpen: false,
      width: 250,
  	  modal: true,
      buttons: [ ok, cancel ],
      beforeClose: function(event) {
        if (event.keyCode === $.ui.keyCode.ESCAPE) {
          $(this).remove();
          cd.editorRefocus();
          return true;
        }
      }
    });

  	input.keyup(function(event) {
      const ok = $('#file-ok');
      const newFilename = $.trim(input.val());
      event.preventDefault();
      if (isValidFilename(newFilename))  {
        ok.button('enable');
        if (event.keyCode === $.ui.keyCode.ENTER) {
          okClicked(newFilename);
          ok.closest('.ui-dialog').remove();
        }
      } else {
        ok.button('disable');
      }
    });

    const lastDot = initialFilename.lastIndexOf('.');
    const end = (lastDot !== -1) ? lastDot : initialFilename.length;
    input[0].setSelectionRange(0, end);

    fileOperationDialog.dialog('open');
  };

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  const makeInput = (name, filename) => {
    const input = $('<input>', {
        type: 'text',
          id: `${name}-filename`,
      'name': `${name}-filename`,
       value: filename
    });
    if (name === 'delete') {
      input.attr('disabled', 'disabled');
    }
    return input;
  };

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  const isValidFilename = filename => {
    const contains = illegal => filename.indexOf(illegal) !== -1;
    if (alreadyExists(filename)) { return false; }
    if (contains('..')) { return false; }
    if (contains('\\')) { return false; }
    if (contains(' '))  { return false; }
    if (filename === '+REPL') { return false; }
    if (filename === '') { return false; }
    return true;
  };

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  const alreadyExists = filename => cd.filenames().includes(filename);

});
</script>
