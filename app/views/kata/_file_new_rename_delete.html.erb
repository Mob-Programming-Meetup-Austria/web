
<button type="button" class="new-file">+</button>

<script type="text/javascript">
'use strict';
$(() => {

  cd.newFileButton = () => $('.new-file');

  cd.newFileButton().click(() => openNewFileDialog());

  const openNewFileDialog = () => {
    const initialFilename = `filename${cd.extensionFilenames()[0]}`;
    const createInitiallyDisabled = !isValidFilename(initialFilename);
    const input = makeInput('new', initialFilename);
    const createButton = $('<button>', {
      text: 'create',
      id: 'file-create',
      disabled: createInitiallyDisabled,
      click: () => {
        const newFilename = $.trim(input.val());
        cd.kata.editor.createFile(newFilename, {content:''});
        cd.kata.filenames.refresh();
        cd.kata.filenames.select(newFilename);
        closeNewFileDialog();
      }
    });
    const closeNewFileDialog = () => createButton.closest('.ui-dialog').remove();
    const cancelButton = {
      text: 'cancel',
      click: () => {
        closeNewFileDialog();
        cd.kata.editor.refocus();
      }
    };

    input.keyup((event) => {
      const newFilename = $.trim(input.val());
      createButton.prop('disabled', !isValidFilename(newFilename));
      if (!createButton.prop('disabled') && event.keyCode === $.ui.keyCode.ENTER) {
        createButton.click();
      }
    });

    const div = $('<div>');
    div.append(input);
    div.append(createButton);

    // position the dialog next to the button that launched it.
    const originator = cd.newFileButton();
    const xPos = originator.offset().left + originator.width() + 18;
    const yPos = originator.offset().top;

    const fileOperationDialog = div.dialog({
      closeOnEscape: true,
  	  title: cd.dialogTitle('file'),
    	autoOpen: false,
      width: 450,
      position: [xPos,yPos],
  	  modal: true,
      buttons: [ cancelButton ],
      beforeClose: (event) => {
        if (event.keyCode === $.ui.keyCode.ESCAPE) {
          closeNewFileDialog();
          cd.kata.editor.refocus();
          return true;
        }
      }
    });

    const lastDot = initialFilename.lastIndexOf('.');
    const end = (lastDot !== -1) ? lastDot : initialFilename.length;
    input[0].setSelectionRange(0, end);

    fileOperationDialog.dialog('open');
  };

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  cd.openRenameDeleteFileDialog = (originator, initialFilename) => {
    alert('TODO: rename|delete');
  };

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  const makeInput = (name, filename) => {
    const input = $('<input>', {
        type: 'text',
          id: `${name}-filename`,
      'name': `${name}-filename`,
       value: filename
    });
    if (name === 'delete') {
      input.attr('disabled', 'disabled');
    }
    return input;
  };

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  const isValidFilename = filename => {
    const contains = illegal => filename.indexOf(illegal) !== -1;
    if (alreadyExists(filename)) { return false; }
    if (contains('..')) { return false; }
    if (contains('\\')) { return false; }
    if (contains(' '))  { return false; }
    if (filename === '+REPL') { return false; }
    if (filename === '') { return false; }
    return true;
  };

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  const alreadyExists = filename => cd.kata.editor.filenames().includes(filename);

});
</script>
