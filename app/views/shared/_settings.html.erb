
<div id="settings-button">&#9881;</div>

<div id="settings-dialog" style="display:none;">
  <div class="info">
    theme<br/>
    <input type="radio" id="light" name="theme" value="light">
    <label for="light">light</label><br/>
    <input type="radio" id="dark" name="theme" value="dark">
    <label for="dark">dark</label>
  </div>
  <div class="info">
    colour syntax</br>
    <input type="radio" id="off" name="colour" value="off">
    <label for="off">off</label><br/>
    <input type="radio" id="on" name="colour" value="on">
    <label for="on">on</label><br/>
  </div>
  <div class="info">
    prediction</br>
    ...
  </div>
</div>


<script type="text/javascript">
'use strict';
$(() => {

  const data = {
    colour:"<%= @colour %>",  // 'on' || 'off'
     theme:"<%= @theme %>"    // 'light' || 'dark' (different to CodeMirror theme)
  };

  cd.settings = {
    colour: () => data.colour,
    theme: () => data.theme
  };

  //- - - - - - - - - - - - - - - - - - - - - - - - -

  cd.turnOnSettingsButton = () => {
    $button.show().click(() => openSettingsDialog())
  };

  //- - - - - - - - - - - - - - - - - - - - - - - - -

  const $button = $('#settings-button');
  const $settings = $('#settings-dialog');

  $('input[type=radio][name=theme]', $settings).change(function() {
    $.post('/kata/set_theme', { id:cd.kataId(), value:this.value });
    data.theme = this.value;
    cd.codeMirror.resetTheme();
  });

  $('input[type=radio][name=colour]', $settings).change(function() {
    $.post('/kata/set_colour', { id:cd.kataId(), value:this.value });
    data.colour = this.value;
    cd.codeMirror.resetTheme();
  });

  $button.click(() => openSettingsDialog());

  cd.createTip($button, 'settings');

  const openSettingsDialog = () => {
    $settings.dialog({
              width: 350,
           autoOpen: true,
      closeOnEscape: true,
              modal: true,
              title: cd.dialogTitle('settings'),
        beforeClose: event => {
          if (event.keyCode === $.ui.keyCode.ESCAPE) {
            cd.kata.editor.refocus();
            return true;
          }
        }
    });
  };

});
</script>
