<script type="text/javascript"><!--
'use strict';
$(() => {

  const review = cd.review;

  review.refreshTrafficLights = () => {
    const trafficLights = $('#review-traffic-lights');
    trafficLights.html(makeTrafficLightsHtml());
    let wasIndex = 0;
    $.each($('.diff-traffic-light', trafficLights), (_, light) => {
      const $light = $(light);
      const nowIndex = $light.data('index');
      $light.click(() => review.moveToTrafficLight(nowIndex));
      cd.setupTrafficLightTip($light, review.params.id, wasIndex, nowIndex);
      wasIndex = nowIndex;
    });
  };

  // - - - - - - - - - - - - - - - - - - - - - - - -
  const makeTrafficLightsHtml = () => {
    let html = '';
    let number = 1;
    review.params.events.forEach(event => {
      if (isVisible(event)) {
        html += makeTrafficLightHtml(event, number);
        number += 1;
      }
    });
    return html;
  };

  // - - - - - - - - - - - - - - - - - - - - - - - -
  const isVisible = (event) => {
    // Eg don't show event[0] == creation
    switch (event.colour) {
    case 'pulling':
    case 'red':
    case 'amber':
    case 'green':
    case 'timed_out':
    case 'faulty':
      return true;
    default:
      return false;
    }
  };

  // - - - - - - - - - - - - - - - - - - - - - - - -
  const makeTrafficLightHtml = (light, number) => {
    const colour = light.colour;
    return '' +
      `${makeRevertCircle(light)}
       ${makePredictCircle(light)}
       <div class="diff-traffic-light"
         data-id="${review.params.id}"
         data-avatar-index="${review.params.avatarIndex}"
         data-number="${number}"
         data-colour="${colour}"
         data-index="${light.index}">
         <img src="/images/traffic-light/${colour}.png"/>
        ${makeTrafficLightMarkerHtml(light)}
      </div>`;
  };

  // - - - - - - - - - - - - - - - - - - - - - - - -
  const makeRevertCircle = (light) => {
    if (isRevert(light)) {
      return '<img class="revert" src="/images/traffic-light/circle-revert.png">';
    } else {
      return '';
    }
  };
  const isRevert = (light) => light.revert != undefined;

  // - - - - - - - - - - - - - - - - - - - - - - - -
  const makePredictCircle = (light) => {
    if (isPredict(light)) {
      const correct = (light.predicted === light.colour);
      const icon = correct ? 'tick' : 'cross';
      return `<img class="${icon}" src="/images/traffic-light/circle-${icon}.png">`;
    } else {
      return '';
    }
  };
  const isPredict = (light) => light.predicted != undefined && light.predicted != 'none';

  // - - - - - - - - - - - - - - - - - - - - - - - -
  const makeTrafficLightMarkerHtml = (light) => {
    const currentIndex = (review.params.nowIndex === light.index);
    if (currentIndex) {
      return `<img id='traffic-light-marker'
                   src='/images/traffic-light/marker_${light.colour}.png'/>`;
    } else {
      return '';
    }
  };

});

//--></script>


<div id="review-traffic-lights"></div>
