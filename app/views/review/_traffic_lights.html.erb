<script type="text/javascript"><!--
'use strict';
$(() => {

  const review = cd.review;

  const $trafficLights = $('#review-traffic-lights');

  review.refreshTrafficLights = (params) => {
    review.getJSON('model', 'kata_events', {id:params.id}, (kata_events) => {
      if (params.nowIndex === -1) {
        const lastEvent = kata_events[kata_events.length - 1];
        review.params.nowIndex = lastEvent.index;
        review.params.wasIndex = lastEvent.index;
      }
      refreshTrafficLightsResponder(kata_events);
    });
  };

  // - - - - - - - - - - - - - - - - - - - - - - - -
  const refreshTrafficLightsResponder = (kata_events) => {
    $trafficLights.empty();
    appendTrafficLights(kata_events);
    review.refreshTrafficLightsNavigator(kata_events);
    scrollCurrentTrafficLightIntoView();
  };

  // - - - - - - - - - - - - - - - - - - - - - - - -
  review.moveToTrafficLight = (index) => {
    const delta = review.inDiffMode() ? 1 : 0;
    review.params.nowIndex = index;
    review.params.wasIndex = index - delta;
    review.refresh();
  };

  // - - - - - - - - - - - - - - - - - - - - - - - -
  const appendTrafficLights = (events) => {
    let wasIndex = 0;
    events.forEach(event => {
      if (isVisible(event)) {
        if (wasPredicted(event)) {
          appendPredictedMarker(event);
        }
        if (wasReverted(event)) {
          appendRevertedMarker(event);
        }
        wasIndex = appendTrafficLight(event, wasIndex);
      }
    });
  };

  // - - - - - - - - - - - - - - - - - - - - - - - -
  const isVisible = (event) => {
    // Eg don't show event[0] == creation
    switch (event.colour) {
    case 'pulling':
    case 'red':
    case 'amber':
    case 'green':
    case 'timed_out':
    case 'faulty':
      return true;
    default:
      return false;
    }
  };

  // - - - - - - - - - - - - - - - - - - - - - - - -
  const wasPredicted = (light) => light.predicted != undefined && light.predicted != 'none';
  const wasReverted = (light) => light.revert != undefined;

  // - - - - - - - - - - - - - - - - - - - - - - - -
  const appendPredictedMarker = (light) => {
    const correct = (light.predicted === light.colour);
    const icon = correct ? 'tick' : 'cross';
    const $predicted = $('<img>', {
      class: icon,
        src: `/images/traffic-light/circle-${icon}.png`
    });
    $trafficLights.append($predicted);
  };

  const appendRevertedMarker = (light) => {
    const $revert = $('<img>', {
      class: 'revert',
        src: '/images/traffic-light/circle-revert.png'
    });
    $trafficLights.append($revert);
  };

  // - - - - - - - - - - - - - - - - - - - - - - - -
  const appendTrafficLight = (light, wasIndex) => {
    const $light = $('<div>', { class: 'diff-traffic-light' });
    const $img = $('<img>', { src: `/images/traffic-light/${light.colour}.png` });
    const nowIndex = light.index;
    $img.click(() => review.moveToTrafficLight(nowIndex));
    const colour = light.colour;
    const avatarIndex = () => review.params.avatarIndex;
    const kataId = review.params.id;
    cd.setupTrafficLightTip2($img, colour, avatarIndex, kataId, wasIndex, nowIndex);
    $light.append($img);
    $light.append(makeTrafficLightMarkerHtml(light));
    $trafficLights.append($light);
    return nowIndex;
  };

  // - - - - - - - - - - - - - - - - - - - - - - - -
  const makeTrafficLightMarkerHtml = (light) => {
    const isCurrentIndex = (review.params.nowIndex === light.index);
    if (isCurrentIndex) {
      return `<img id='traffic-light-marker'
                   src='/images/traffic-light/marker_${light.colour}.png'/>`;
    } else {
      return '';
    }
  };

  // - - - - - - - - - - - - - - - - - - - - - - - -
  const scrollCurrentTrafficLightIntoView = () => {
    // refreshTrafficLights() has updated the dom with a $('#traffic-light-marker')
    // I cannot find a nice way to access it once the dom is ready. So this :-(
    const quarterSecond = 250;
    const scroller = () => {
      $('#traffic-light-marker').scrollIntoView({
        direction: 'horizontal',
         duration: 'slow'
      });
    };
    setTimeout(scroller, quarterSecond);
  };

});
//--></script>

<div id="review-traffic-lights"></div>
