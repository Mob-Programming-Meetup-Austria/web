<script type="text/javascript"><!--
'use strict';
$(() => {

  const review = cd.review;

  const $kataPage = $('#kata-page');

  review.page = $('#review-page');

  review.inTestPage = $kataPage.length !== 0;

  review.params = {
             id: "<%= @id %>",
       wasIndex: <%= @was_index %>,
       nowIndex: <%= @now_index %>
  };

  // - - - - - - - - - - - - - - - - - - - - - - - -
  cd.review.fromTestPage = (kataId, wasIndex, nowIndex) => {
    review.params = { id:kataId, wasIndex:wasIndex, nowIndex:nowIndex };
    review.fadeIntoReviewPage();
    review.refresh();
  };

  // - - - - - - - - - - - - - - - - - - - - - - - -
  review.fadeIntoReviewPage = () => {
    $kataPage.fadeOut('fast', () => {
      review.page.fadeIn('fast');
    });
  };

  // - - - - - - - - - - - - - - - - - - - - - - - -
  review.fadeIntoKataPage = (onComplete) => {
    review.page.fadeOut('fast', () => {
      $kataPage.fadeIn('fast', () => {
        onComplete();
      });
    });
  };

  // - - - - - - - - - - - - - - - - - - - - - - - -
  review.refresh = () => {
    const params = review.params;
    const args = { 
             id: params.id,
      was_index: params.wasIndex,
      now_index: params.nowIndex
    };
    review.waitSpinnerGetJSON('/differ/diff', args, (data) => {
      review.params = data;
      review.refreshAvatarNavigator(data);
      cd.setupHoverTips($('[data-tip]'));
    });
    review.refreshDiffCheckBox();
    review.refreshTrafficLights(params);
    review.refreshFiles(params);
    review.refreshOutput(params);
  };

  // - - - - - - - - - - - - - - - - - - - - - - - -
  review.waitSpinnerGetJSON = (path, params, callBack) => {
    cd.waitSpinner.fadeIn('fast', () => {
      $.getJSON(path, params, (data) => {
        cd.waitSpinner.fadeOut('fast', () => {
          callBack(data);
        });
      });
    });
  };

  // - - - - - - - - - - - - - - - - - - - - - - - -
  review.getJSON = (serviceName, path, args, responder) => {
    cd.waitSpinner.fadeIn('fast', () => {
      $.getJSON(`/${serviceName}/${path}`, args, (json) => {
        cd.waitSpinner.fadeOut('fast', () => {
          responder(json[path]);
        });
      });
    });
  };

});
//--></script>

<%= render partial: 'review/create_button' %>
<%= render partial: 'review/pick_file' %>
<%= render partial: 'shared/filenames_sorted' %>

<div id="review-top-row">
  <%= render partial: 'review/avatar_navigator' %>
  <%= render partial: 'review/traffic_light_navigator' %>
  <%= render partial: 'review/traffic_lights' %>
</div>

<table>
  <tr valign="top">
    <td class="left-column">
      <table class="controls">
        <tr>
          <td><%= render partial: 'review/resume_button' %></td>
          <td><%= render partial: 'review/diff_checkbox' %></td>
          <td><%= render partial: 'review/fork_button' %></td>
          <td><%= render partial: 'review/checkout_button' %></td>
        </tr>
      </table>
      <table>
        <tr><td><%= render partial: 'review/filenames' %></td></tr>
        <tr><td><%= render partial: 'review/output' %></td></tr>
      </table>
    </td>
    <td>
      <div id="diff-content"></div>
      <div id="diff-content-output"></div>
    </td>
  </tr>
</table>

<script type="text/javascript"><!--
'use strict';
$(() => {
  const review = cd.review;
  if (!review.inTestPage) {
    review.page.show();
    review.refresh();
  }
});
//--></script>
