<script type="text/javascript"><!--
'use strict';
$(() => {

  const review = cd.review;

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  // After refresh() has been called review.params also contains...
  // .events
  //   holds the traffic-lights and is used to program
  //   the traffic-light [<][<][>][>] navigator buttons.
  // .prevAvatarId
  // .nextAvatarId
  //   hold the kata-ids and used is used to program
  //   the avatar [<][>] navigator buttons.
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  const $kataPage = $('#kata-page');

  review.page = $('#review-page');

  review.inTestPage = $kataPage.length !== 0;

  review.params = {
             id: "<%= @id %>",
        groupId: "<%= @group_id %>",
    avatarIndex: "<%= @avatar_index %>",
       wasIndex: <%= @was_index %>,
       nowIndex: <%= @now_index %>
  };

  // - - - - - - - - - - - - - - - - - - - - - - - -
  cd.review.fromTestPage = (id, groupId, avatarIndex, wasIndex, nowIndex) => {
    // Called only from app/views/kata/_traffic_lights.html.erb
    review.params = {
               id:id,
          groupId:groupId,
      avatarIndex:avatarIndex,
         wasIndex:wasIndex,
         nowIndex:nowIndex
    };
    review.fadeIntoReviewPage();
    review.refresh();
  };

  // - - - - - - - - - - - - - - - - - - - - - - - -
  review.fadeIntoReviewPage = () => {
    $kataPage.fadeOut('fast', () => {
      review.page.fadeIn('fast');
    });
  };

  // - - - - - - - - - - - - - - - - - - - - - - - -
  review.fadeIntoKataPage = (onComplete) => {
    review.page.fadeOut('fast', () => {
      $kataPage.fadeIn('fast', () => {
        onComplete();
      });
    });
  };

  // - - - - - - - - - - - - - - - - - - - - - - - -
  review.refresh = () => {
    const params = review.params;
    const args = {
                id: params.id,
          group_id: params.groupId,
         was_index: params.wasIndex,
         now_index: params.nowIndex
    };
    review.waitSpinnerGetJSON('/differ/diff', args, (data) => {
      review.params = data;
      review.refreshAvatarNavigator(data);
      review.refreshDiffCheckBox(data);
      scrollCurrentTrafficLightIntoView();
      cd.setupHoverTips($('[data-tip]'));
    });
    review.refreshTrafficLights(params);
    review.refreshFiles(params);
    review.refreshOutput(params);

  };

  // - - - - - - - - - - - - - - - - - - - - - - - -
  review.waitSpinnerGetJSON = (path, params, callBack) => {
    cd.waitSpinner.fadeIn('fast', () => {
      $.getJSON(path, params, (data) => {
        cd.waitSpinner.fadeOut('fast', () => {
          callBack(data);
        });
      });
    });
  };

  // - - - - - - - - - - - - - - - - - - - - - - - -
  const scrollCurrentTrafficLightIntoView = () => {
    // refreshTrafficLights() has updated the dom with a $('#traffic-light-marker')
    // I cannot find a nice way to access it once the dom is ready. So this :-(
    const quarterSecond = 250;
    const scroller = () => {
      $('#traffic-light-marker').scrollIntoView({
        direction:'horizontal',
        duration:'slow'
      });
    };
    setTimeout(scroller, quarterSecond);
  };

  // - - - - - - - - - - - - - - - - - - - - - - - -
  review.setupButton = (name, handler) => {
    const button = `<button id="${name}-button" type="button"></button>`;
    $(`#${name}-button-box`).html(button);
    $(`#${name}-button`)
      .text(name)
      .unbind('click')
      .bind('click', handler);
  };

});
//--></script>

<%= render partial: 'shared/filenames_sorted' %>
<%= render partial: 'review/file_picker' %>

<div id="review-top-row">
  <%= render partial: 'review/avatar_navigator' %>
  <%= render partial: 'review/traffic_light_navigator' %>
  <%= render partial: 'review/traffic_lights' %>
</div>

<table>
  <tr valign="top">
    <td class="left-column">
      <table class="controls">
        <tr>
          <td><%= render partial: 'review/resume_button' %></td>
          <td><%= render partial: 'review/diff_checkbox' %></td>
          <td><%= render partial: 'review/fork_button' %></td>
          <td><%= render partial: 'review/checkout_button' %></td>
        </tr>
      </table>
      <table>
        <tr><td><%= render partial: 'review/filenames' %></td></tr>
        <tr><td><%= render partial: 'review/output' %></td></tr>
      </table>
    </td>
    <td>
      <div id="diff-content"></div>
      <div id="diff-content-output"></div>
    </td>
  </tr>
</table>

<script type="text/javascript"><!--
'use strict';
$(() => {
  const review = cd.review;
  if (!review.inTestPage) {
    review.page.show();
    review.refresh();
  }
});
//--></script>
